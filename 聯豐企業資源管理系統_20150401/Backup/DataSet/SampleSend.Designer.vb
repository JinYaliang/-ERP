'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:2.0.50727.5420
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableSampleSend As SampleSendDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SampleSend")) Is Nothing) Then
                MyBase.Tables.Add(New SampleSendDataTable(ds.Tables("SampleSend")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SampleSend() As SampleSendDataTable
        Get
            Return Me.tableSampleSend
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("SampleSend")) Is Nothing) Then
                MyBase.Tables.Add(New SampleSendDataTable(ds.Tables("SampleSend")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSampleSend = CType(MyBase.Tables("SampleSend"),SampleSendDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSampleSend) Is Nothing) Then
                Me.tableSampleSend.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSampleSend = New SampleSendDataTable
        MyBase.Tables.Add(Me.tableSampleSend)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSampleSend() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub SampleSendRowChangeEventHandler(ByVal sender As Object, ByVal e As SampleSendRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SampleSendDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnAutoID As Global.System.Data.DataColumn
        
        Private columnSP_ID As Global.System.Data.DataColumn
        
        Private columnSO_ID As Global.System.Data.DataColumn
        
        Private columnSS_Edition As Global.System.Data.DataColumn
        
        Private columnSP_Qty As Global.System.Data.DataColumn
        
        Private columnSP_CUsterID As Global.System.Data.DataColumn
        
        Private columnPM_M_Code As Global.System.Data.DataColumn
        
        Private columnM_Code As Global.System.Data.DataColumn
        
        Private columnSP_Remark As Global.System.Data.DataColumn
        
        Private columnSP_SendDate As Global.System.Data.DataColumn
        
        Private columnSP_AddUserID As Global.System.Data.DataColumn
        
        Private columnSP_AddDate As Global.System.Data.DataColumn
        
        Private columnSP_ModifyUserID As Global.System.Data.DataColumn
        
        Private columnSP_ModifyDate As Global.System.Data.DataColumn
        
        Private columnCO_ID As Global.System.Data.DataColumn
        
        Private columnSP_CheckUserID As Global.System.Data.DataColumn
        
        Private columnSP_Check As Global.System.Data.DataColumn
        
        Private columnSP_CheckDate As Global.System.Data.DataColumn
        
        Private columnSP_CheckRemark As Global.System.Data.DataColumn
        
        Private columnSP_CheckUserName As Global.System.Data.DataColumn
        
        Private columnSP_AddUserName As Global.System.Data.DataColumn
        
        Private columnSP_ModifyUserName As Global.System.Data.DataColumn
        
        Private columnm_name As Global.System.Data.DataColumn
        
        Private columnpm_m_name As Global.System.Data.DataColumn
        
        Private columnC_ChsName As Global.System.Data.DataColumn
        
        Private columnSP_ExpDeliveryID As Global.System.Data.DataColumn
        
        Private columnSP_ExpCompany As Global.System.Data.DataColumn
        
        Private columnAddressee As Global.System.Data.DataColumn
        
        Private columnProject As Global.System.Data.DataColumn
        
        Private columnHandle As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SampleSend"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AutoIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SO_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSO_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SS_EditionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSS_Edition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_Qty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CUsterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_CUsterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PM_M_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPM_M_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property M_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnM_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_Remark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_SendDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_SendDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_AddUserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_AddUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_AddDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_AddDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ModifyUserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ModifyUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ModifyDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ModifyDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CO_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCO_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CheckUserIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_CheckUserID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_Check
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CheckDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_CheckDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CheckRemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_CheckRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_CheckUserNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_CheckUserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_AddUserNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_AddUserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ModifyUserNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ModifyUserName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property m_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnm_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pm_m_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpm_m_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C_ChsNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC_ChsName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ExpDeliveryIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ExpDeliveryID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SP_ExpCompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSP_ExpCompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddresseeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddressee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ProjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProject
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HandleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHandle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SampleSendRow
            Get
                Return CType(Me.Rows(index),SampleSendRow)
            End Get
        End Property
        
        Public Event SampleSendRowChanging As SampleSendRowChangeEventHandler
        
        Public Event SampleSendRowChanged As SampleSendRowChangeEventHandler
        
        Public Event SampleSendRowDeleting As SampleSendRowChangeEventHandler
        
        Public Event SampleSendRowDeleted As SampleSendRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSampleSendRow(ByVal row As SampleSendRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSampleSendRow( _
                    ByVal AutoID As String,  _
                    ByVal SP_ID As String,  _
                    ByVal SO_ID As String,  _
                    ByVal SS_Edition As String,  _
                    ByVal SP_Qty As String,  _
                    ByVal SP_CUsterID As String,  _
                    ByVal PM_M_Code As String,  _
                    ByVal M_Code As String,  _
                    ByVal SP_Remark As String,  _
                    ByVal SP_SendDate As String,  _
                    ByVal SP_AddUserID As String,  _
                    ByVal SP_AddDate As String,  _
                    ByVal SP_ModifyUserID As String,  _
                    ByVal SP_ModifyDate As String,  _
                    ByVal CO_ID As String,  _
                    ByVal SP_CheckUserID As String,  _
                    ByVal SP_Check As String,  _
                    ByVal SP_CheckDate As String,  _
                    ByVal SP_CheckRemark As String,  _
                    ByVal SP_CheckUserName As String,  _
                    ByVal SP_AddUserName As String,  _
                    ByVal SP_ModifyUserName As String,  _
                    ByVal m_name As String,  _
                    ByVal pm_m_name As String,  _
                    ByVal C_ChsName As String,  _
                    ByVal SP_ExpDeliveryID As String,  _
                    ByVal SP_ExpCompany As String,  _
                    ByVal Addressee As String,  _
                    ByVal Project As String,  _
                    ByVal Handle As String) As SampleSendRow
            Dim rowSampleSendRow As SampleSendRow = CType(Me.NewRow,SampleSendRow)
            Dim columnValuesArray() As Object = New Object() {AutoID, SP_ID, SO_ID, SS_Edition, SP_Qty, SP_CUsterID, PM_M_Code, M_Code, SP_Remark, SP_SendDate, SP_AddUserID, SP_AddDate, SP_ModifyUserID, SP_ModifyDate, CO_ID, SP_CheckUserID, SP_Check, SP_CheckDate, SP_CheckRemark, SP_CheckUserName, SP_AddUserName, SP_ModifyUserName, m_name, pm_m_name, C_ChsName, SP_ExpDeliveryID, SP_ExpCompany, Addressee, Project, Handle}
            rowSampleSendRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSampleSendRow)
            Return rowSampleSendRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SampleSendDataTable = CType(MyBase.Clone,SampleSendDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SampleSendDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnAutoID = MyBase.Columns("AutoID")
            Me.columnSP_ID = MyBase.Columns("SP_ID")
            Me.columnSO_ID = MyBase.Columns("SO_ID")
            Me.columnSS_Edition = MyBase.Columns("SS_Edition")
            Me.columnSP_Qty = MyBase.Columns("SP_Qty")
            Me.columnSP_CUsterID = MyBase.Columns("SP_CUsterID")
            Me.columnPM_M_Code = MyBase.Columns("PM_M_Code")
            Me.columnM_Code = MyBase.Columns("M_Code")
            Me.columnSP_Remark = MyBase.Columns("SP_Remark")
            Me.columnSP_SendDate = MyBase.Columns("SP_SendDate")
            Me.columnSP_AddUserID = MyBase.Columns("SP_AddUserID")
            Me.columnSP_AddDate = MyBase.Columns("SP_AddDate")
            Me.columnSP_ModifyUserID = MyBase.Columns("SP_ModifyUserID")
            Me.columnSP_ModifyDate = MyBase.Columns("SP_ModifyDate")
            Me.columnCO_ID = MyBase.Columns("CO_ID")
            Me.columnSP_CheckUserID = MyBase.Columns("SP_CheckUserID")
            Me.columnSP_Check = MyBase.Columns("SP_Check")
            Me.columnSP_CheckDate = MyBase.Columns("SP_CheckDate")
            Me.columnSP_CheckRemark = MyBase.Columns("SP_CheckRemark")
            Me.columnSP_CheckUserName = MyBase.Columns("SP_CheckUserName")
            Me.columnSP_AddUserName = MyBase.Columns("SP_AddUserName")
            Me.columnSP_ModifyUserName = MyBase.Columns("SP_ModifyUserName")
            Me.columnm_name = MyBase.Columns("m_name")
            Me.columnpm_m_name = MyBase.Columns("pm_m_name")
            Me.columnC_ChsName = MyBase.Columns("C_ChsName")
            Me.columnSP_ExpDeliveryID = MyBase.Columns("SP_ExpDeliveryID")
            Me.columnSP_ExpCompany = MyBase.Columns("SP_ExpCompany")
            Me.columnAddressee = MyBase.Columns("Addressee")
            Me.columnProject = MyBase.Columns("Project")
            Me.columnHandle = MyBase.Columns("Handle")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnAutoID = New Global.System.Data.DataColumn("AutoID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoID)
            Me.columnSP_ID = New Global.System.Data.DataColumn("SP_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ID)
            Me.columnSO_ID = New Global.System.Data.DataColumn("SO_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSO_ID)
            Me.columnSS_Edition = New Global.System.Data.DataColumn("SS_Edition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSS_Edition)
            Me.columnSP_Qty = New Global.System.Data.DataColumn("SP_Qty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_Qty)
            Me.columnSP_CUsterID = New Global.System.Data.DataColumn("SP_CUsterID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CUsterID)
            Me.columnPM_M_Code = New Global.System.Data.DataColumn("PM_M_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPM_M_Code)
            Me.columnM_Code = New Global.System.Data.DataColumn("M_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnM_Code)
            Me.columnSP_Remark = New Global.System.Data.DataColumn("SP_Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_Remark)
            Me.columnSP_SendDate = New Global.System.Data.DataColumn("SP_SendDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_SendDate)
            Me.columnSP_AddUserID = New Global.System.Data.DataColumn("SP_AddUserID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_AddUserID)
            Me.columnSP_AddDate = New Global.System.Data.DataColumn("SP_AddDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_AddDate)
            Me.columnSP_ModifyUserID = New Global.System.Data.DataColumn("SP_ModifyUserID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ModifyUserID)
            Me.columnSP_ModifyDate = New Global.System.Data.DataColumn("SP_ModifyDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ModifyDate)
            Me.columnCO_ID = New Global.System.Data.DataColumn("CO_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCO_ID)
            Me.columnSP_CheckUserID = New Global.System.Data.DataColumn("SP_CheckUserID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CheckUserID)
            Me.columnSP_Check = New Global.System.Data.DataColumn("SP_Check", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_Check)
            Me.columnSP_CheckDate = New Global.System.Data.DataColumn("SP_CheckDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CheckDate)
            Me.columnSP_CheckRemark = New Global.System.Data.DataColumn("SP_CheckRemark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CheckRemark)
            Me.columnSP_CheckUserName = New Global.System.Data.DataColumn("SP_CheckUserName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_CheckUserName)
            Me.columnSP_AddUserName = New Global.System.Data.DataColumn("SP_AddUserName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_AddUserName)
            Me.columnSP_ModifyUserName = New Global.System.Data.DataColumn("SP_ModifyUserName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ModifyUserName)
            Me.columnm_name = New Global.System.Data.DataColumn("m_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm_name)
            Me.columnpm_m_name = New Global.System.Data.DataColumn("pm_m_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpm_m_name)
            Me.columnC_ChsName = New Global.System.Data.DataColumn("C_ChsName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC_ChsName)
            Me.columnSP_ExpDeliveryID = New Global.System.Data.DataColumn("SP_ExpDeliveryID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ExpDeliveryID)
            Me.columnSP_ExpCompany = New Global.System.Data.DataColumn("SP_ExpCompany", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSP_ExpCompany)
            Me.columnAddressee = New Global.System.Data.DataColumn("Addressee", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddressee)
            Me.columnProject = New Global.System.Data.DataColumn("Project", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProject)
            Me.columnHandle = New Global.System.Data.DataColumn("Handle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHandle)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSampleSendRow() As SampleSendRow
            Return CType(Me.NewRow,SampleSendRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SampleSendRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SampleSendRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SampleSendRowChangedEvent) Is Nothing) Then
                RaiseEvent SampleSendRowChanged(Me, New SampleSendRowChangeEvent(CType(e.Row,SampleSendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SampleSendRowChangingEvent) Is Nothing) Then
                RaiseEvent SampleSendRowChanging(Me, New SampleSendRowChangeEvent(CType(e.Row,SampleSendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SampleSendRowDeletedEvent) Is Nothing) Then
                RaiseEvent SampleSendRowDeleted(Me, New SampleSendRowChangeEvent(CType(e.Row,SampleSendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SampleSendRowDeletingEvent) Is Nothing) Then
                RaiseEvent SampleSendRowDeleting(Me, New SampleSendRowChangeEvent(CType(e.Row,SampleSendRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSampleSendRow(ByVal row As SampleSendRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DataSet1 = New DataSet1
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SampleSendDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class SampleSendRow
        Inherits Global.System.Data.DataRow
        
        Private tableSampleSend As SampleSendDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSampleSend = CType(Me.Table,SampleSendDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AutoID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.AutoIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'AutoID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.AutoIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SO_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SO_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SO_ID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SO_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SS_Edition() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SS_EditionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SS_Edition' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SS_EditionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_Qty() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_QtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_Qty' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_QtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CUsterID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CUsterIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_CUsterID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CUsterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PM_M_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.PM_M_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'PM_M_Code' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.PM_M_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property M_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.M_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'M_Code' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.M_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_Remark() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_RemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_Remark' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_RemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_SendDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_SendDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_SendDate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_SendDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_AddUserID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_AddUserIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_AddUserID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_AddUserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_AddDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_AddDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_AddDate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_AddDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ModifyUserID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_ModifyUserIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ModifyUserID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_ModifyUserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ModifyDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_ModifyDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ModifyDate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_ModifyDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CO_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.CO_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'CO_ID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.CO_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CheckUserID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CheckUserIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_CheckUserID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CheckUserIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_Check() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_Check' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CheckDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CheckDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_CheckDate' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CheckDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CheckRemark() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CheckRemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_CheckRemark' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CheckRemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_CheckUserName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_CheckUserNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_CheckUserName' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_CheckUserNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_AddUserName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_AddUserNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_AddUserName' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_AddUserNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ModifyUserName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_ModifyUserNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ModifyUserName' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_ModifyUserNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property m_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.m_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'm_name' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.m_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pm_m_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.pm_m_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'pm_m_name' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.pm_m_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C_ChsName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.C_ChsNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'C_ChsName' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.C_ChsNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ExpDeliveryID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_ExpDeliveryIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ExpDeliveryID' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_ExpDeliveryIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SP_ExpCompany() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.SP_ExpCompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'SP_ExpCompany' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.SP_ExpCompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Addressee() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.AddresseeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'Addressee' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.AddresseeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Project() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.ProjectColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'Project' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.ProjectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Handle() As String
            Get
                Try 
                    Return CType(Me(Me.tableSampleSend.HandleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("資料表 'SampleSend' 中資料行 'Handle' 的值是 DBNull。", e)
                End Try
            End Get
            Set
                Me(Me.tableSampleSend.HandleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAutoIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.AutoIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAutoIDNull()
            Me(Me.tableSampleSend.AutoIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_IDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_IDNull()
            Me(Me.tableSampleSend.SP_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSO_IDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SO_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSO_IDNull()
            Me(Me.tableSampleSend.SO_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSS_EditionNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SS_EditionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSS_EditionNull()
            Me(Me.tableSampleSend.SS_EditionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_QtyNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_QtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_QtyNull()
            Me(Me.tableSampleSend.SP_QtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CUsterIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CUsterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CUsterIDNull()
            Me(Me.tableSampleSend.SP_CUsterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPM_M_CodeNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.PM_M_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPM_M_CodeNull()
            Me(Me.tableSampleSend.PM_M_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsM_CodeNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.M_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetM_CodeNull()
            Me(Me.tableSampleSend.M_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_RemarkNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_RemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_RemarkNull()
            Me(Me.tableSampleSend.SP_RemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_SendDateNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_SendDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_SendDateNull()
            Me(Me.tableSampleSend.SP_SendDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_AddUserIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_AddUserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_AddUserIDNull()
            Me(Me.tableSampleSend.SP_AddUserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_AddDateNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_AddDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_AddDateNull()
            Me(Me.tableSampleSend.SP_AddDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ModifyUserIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_ModifyUserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ModifyUserIDNull()
            Me(Me.tableSampleSend.SP_ModifyUserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ModifyDateNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_ModifyDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ModifyDateNull()
            Me(Me.tableSampleSend.SP_ModifyDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCO_IDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.CO_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCO_IDNull()
            Me(Me.tableSampleSend.CO_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CheckUserIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CheckUserIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CheckUserIDNull()
            Me(Me.tableSampleSend.SP_CheckUserIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CheckNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CheckNull()
            Me(Me.tableSampleSend.SP_CheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CheckDateNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CheckDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CheckDateNull()
            Me(Me.tableSampleSend.SP_CheckDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CheckRemarkNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CheckRemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CheckRemarkNull()
            Me(Me.tableSampleSend.SP_CheckRemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_CheckUserNameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_CheckUserNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_CheckUserNameNull()
            Me(Me.tableSampleSend.SP_CheckUserNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_AddUserNameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_AddUserNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_AddUserNameNull()
            Me(Me.tableSampleSend.SP_AddUserNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ModifyUserNameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_ModifyUserNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ModifyUserNameNull()
            Me(Me.tableSampleSend.SP_ModifyUserNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ism_nameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.m_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setm_nameNull()
            Me(Me.tableSampleSend.m_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispm_m_nameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.pm_m_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpm_m_nameNull()
            Me(Me.tableSampleSend.pm_m_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC_ChsNameNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.C_ChsNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC_ChsNameNull()
            Me(Me.tableSampleSend.C_ChsNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ExpDeliveryIDNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_ExpDeliveryIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ExpDeliveryIDNull()
            Me(Me.tableSampleSend.SP_ExpDeliveryIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSP_ExpCompanyNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.SP_ExpCompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSP_ExpCompanyNull()
            Me(Me.tableSampleSend.SP_ExpCompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddresseeNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.AddresseeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddresseeNull()
            Me(Me.tableSampleSend.AddresseeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsProjectNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.ProjectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetProjectNull()
            Me(Me.tableSampleSend.ProjectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHandleNull() As Boolean
            Return Me.IsNull(Me.tableSampleSend.HandleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHandleNull()
            Me(Me.tableSampleSend.HandleColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class SampleSendRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SampleSendRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As SampleSendRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As SampleSendRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
