<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdFind.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAGDSURBVDhPpZOhcsMwDIb7KHmD5g0aOOagFbpogw5qoUO2hcWwbIaFgoWGg4aFgYOGZf+ktGmb
        rLvr3XSnu+Ti/9MvyZkBmP0nR2L70Wb2va04yTZtstZKkrG2Mhub3St0AbC4ECEH4qFDSgnpmPg5wu8I
        Zs2gjS2mkB5wrkwhBH6dxBEMAmgfYIwhzpGTE4BtS+VpiLDPBHTfgNt66Bdd3boYACS2b2MkZkDkz7SP
        0K9abF5aPwFsyy3zqSEmlaW6AEJM0FrLwSnAXgG34rP12MkwE+iruw/gNVGMEfhLzIDAAE8BenmnBV5R
        JauSvvlsP7DBtlQWsdivG8cOVP2rBbkkZm36O3ARnquKkDjdlqCWKrhmhc83XQ6QyzB4v4XmPTvne6vS
        r6TfBdS1g3pWFEONdPCg7RUyusq8ooynXHGSTJsrJhEqtQi+ztHtC6TO9TlAHvqRtJqXqzIHNVdIFx28
        Wz3+Jw4Q3xQgl6MscrRWFQ85GAbWQ54yFHkOtZj3g/wBSIXz0PS/A3oAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnExcel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAHJSURBVDhPpVKhduMwENw/qFmhw47qD2JYKFhWsTsWsSuLYFkEA80aFrELi9iV2ezKZFhms5bN
        7UpO7jWvB/q6fuPVszWzs1oRAPoKvkSWwlmAVmTswcJFB/fkGZJP8PD8rWk16Cc1l26JvhdyP/UzIud/
        iLye+BGR1ePKsIBiVCchMjuTiWEIF5VnB9GWfweHNCbPRBFZnAXuHu+mOERkFy89hmnIkHVkYvvclty3
        zEFvfUT3Z3QnEXbAFZ4DbLCyAZHXQv5PTMZFmPuAlEZxQ7kF2xqYrTiboB8U6IbQcs8SYl9cDG8D8IrJ
        7QB/ALRtsdocF2SYrKyC3RYHIqLuK1S3xK4M9K7JZyMHOb6OLMBF3ABlIppbjyzQsEB4CmfXnsdJmlAZ
        4vZy7znGcZyUCVA/CpkdNKS3GuZBY3hhizKu3kMHDeWqLKI9uzuY4kAEmCjk4+8kykTaa4RYqss4RcCz
        ZUEWaQiGL5FE13W90g77Yx5nvgtE3KsLpcfLkINzPJ0wH+hms2lTSu/vAV1zDTZydX3l6m+1Wy6Xfr1e
        t/tf+5hSJ/MsvTHqura893wLswN5FStUzVhwVjOyOMPMWb5/LHAS+mz+CzGqxUMk4FG2AAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="FolderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>